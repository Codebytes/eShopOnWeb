name: eShopOnWeb Build and Test

on: [push, pull_request, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'

    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release
    - run: |	
        mkdir -p ${{ github.workspace }}/artifact
    - name: dotnet publish
      run: dotnet publish ./src/Web/Web.csproj -c Release -o ${{ github.workspace }}/artifact

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{ github.workspace }}/artifact

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: iac
        path: ${{ github.workspace }}/iac

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Dev'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: iac
        path: iac
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app
        path: dotnet
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./iac/bicep/main.bicep
        parameters: sqlAdministratorLogin=${{ secrets.SQL_ADMIN }} sqlAdministratorLoginPassword=${{ secrets.SQL_PASSWORD }}
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'cayers-eShopOnWeb'
        slot-name: 'production'
        publish-profile: \${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: dotnet
